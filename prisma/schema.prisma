generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Shop {
  shopId   String @id @default(uuid())
  shopCode String @unique
  shopName String
  mobileNo String
  address  String
}

model Staff {
  staffId     String        @id @default(uuid())
  staffCode   String        @unique
  staffName   String
  dateOfBirth DateTime
  mobileNo    String
  address     String
  gender      Gender
  position    Position      @default(cashier)
  saleInvoice SaleInvoice[]
}

model Product {
  productId          String               @id @default(uuid())
  productCode        String               @unique
  productName        String
  price              Float
  categoryCode       String?
  category           ProductCategory?     @relation(fields: [categoryCode], references: [productCategoryCode])
  saleInvoiceDetails SaleInvoiceDetails[]
}

model ProductCategory {
  productCategoryId   String    @id @default(uuid())
  productCategoryCode String    @unique
  productCategoryName String
  products            Product[]
}

model SaleInvoice {
  saleInvoiceId      String               @id @default(uuid())
  dateTime           DateTime             @default(now())
  voucherNo          String               @unique
  totalAmount        Float
  discount           Float                @default(0)
  tax                Float                @default(5)
  paymentType        PaymentType
  paymentAmount      Float?
  receiveAmount      Float?
  change             Float?
  saleInvoiceDetails SaleInvoiceDetails[]
  staffCode          String
  staff              Staff                @relation(fields: [staffCode], references: [staffCode])
}

model SaleInvoiceDetails {
  saleInvoiceDetailsId String      @id @default(uuid())
  voucherNo            String
  saleInvoice          SaleInvoice @relation(fields: [voucherNo], references: [voucherNo], onDelete: Cascade)
  productCode          String
  product              Product     @relation(fields: [productCode], references: [productCode], onDelete: Restrict)
  quantity             Int
  price                Float
  amount               Float
}

enum PaymentType {
  cash
  mobileBanking
}

enum Gender {
  male
  female
  other
}

enum Position {
  cashier
  admin
}
